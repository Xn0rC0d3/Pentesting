#!/usr/bin/python3
#coding:utf-8

import re, sys, subprocess
#usage -> python3 showSOtarget.py <ipTarget>

if len(sys.argv) != 2: #if lenght of instruccion has more than 2 args (arg#1 is nameFile, #2 is ipTarget, no more arg supported)
  print("\n[!] Usage: python3 " + sys.argv[0] + " <ip_address>\n") #detect nameFile dynamically
  sys.exit(1) #exit program with error code

def get_ttl(ip_address):
  proc = subprocess.Popen(["/usr/bin/ping -c 1 %s" % ip_address, ""], stdout=subprocess.PIPE, shell=True) #launch ping on shell redirecting exit with pipe
  (out,err) = proc.communicate()
  
  out = out.split()
  out = out[12].decode('utf-8') #ttl is in #12 position (begining at 0)
  
  ttl_value = re.findall(r"\d{1,3}", out)[0]
  return ttl_value

def get_os(ttl):
  ttl = int(ttl) #transform string to integer
  
  if ttl >= 0 and ttl <= 64:
    return "Linux"
  elif ttl >= 65 and ttl <= 128:
    return "Windows"
  else:
    return "Operative System (O.S.) NOT Found!"

  
if __name__ == '__main__': #main execution
    ip_address = sys.argv[1] #take argument from console command
    ttl = get_ttl(ip_address) #launch ping and process input
    os_name = get_os(ttl) #calculate OS by TTL
    
    print("%s (ttl -> %s): %s" % (ip_address, ttl, os_name)) #format output
